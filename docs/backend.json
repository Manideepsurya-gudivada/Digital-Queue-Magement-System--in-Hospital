{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user of the system (Admin, Doctor, Patient, etc.).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user (matches Firebase Auth UID)."
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The user's role in the system (ADMIN, DOCTOR, PATIENT, RECEPTIONIST)."
        },
        "phone": {
          "type": "string",
          "description": "The user's phone number."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "role"
      ]
    },
    "Patient": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Patient",
      "type": "object",
      "description": "Represents patient-specific data, linked to a UserProfile.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the patient record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the UserProfile. (Relationship: UserProfile 1:1 Patient)"
        },
        "age": {
          "type": "number",
          "description": "The patient's age."
        },
        "gender": {
          "type": "string",
          "description": "The patient's gender."
        },
        "medicalHistory": {
          "type": "string",
          "description": "A summary of the patient's medical history."
        }
      },
      "required": [
        "id",
        "userId",
        "age",
        "gender"
      ]
    },
    "Doctor": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Doctor",
      "type": "object",
      "description": "Represents doctor-specific data, linked to a UserProfile.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the doctor record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the UserProfile. (Relationship: UserProfile 1:1 Doctor)"
        },
        "specialization": {
          "type": "string",
          "description": "The doctor's specialization."
        },
        "department": {
          "type": "string",
          "description": "The doctor's department."
        }
      },
      "required": [
        "id",
        "userId",
        "specialization",
        "department"
      ]
    },
    "Queue": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Queue",
      "type": "object",
      "description": "Represents a patient's position in the queue.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the queue entry.",
          "format": "uuid"
        },
        "doctorId": {
          "type": "string",
          "description": "Reference to Doctor. (Relationship: Doctor 1:N Queue)"
        },
        "patientId": {
          "type": "string",
          "description": "Reference to Patient. (Relationship: Patient 1:N Queue)"
        },
        "tokenNumber": {
          "type": "number",
          "description": "The token number assigned to the patient."
        },
        "status": {
          "type": "string",
          "description": "The status of the patient in the queue (WAITING, IN_PROGRESS, COMPLETED)."
        },
        "estimatedWaitTime": {
          "type": "number",
          "description": "The estimated wait time for the patient (in minutes)."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the queue entry was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "doctorId",
        "patientId",
        "tokenNumber",
        "status",
        "estimatedWaitTime",
        "createdAt"
      ]
    },
    "CaseStudy": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CaseStudy",
      "type": "object",
      "description": "Represents a case study documented by a doctor.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the case study.",
          "format": "uuid"
        },
        "doctorId": {
          "type": "string",
          "description": "Reference to Doctor. (Relationship: Doctor 1:N CaseStudy)"
        },
        "title": {
          "type": "string",
          "description": "The title of the case study."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the case study."
        },
        "category": {
          "type": "string",
          "description": "The category of the case study (e.g., disease, specialization)."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the case study was created.",
          "format": "date-time"
        },
        "isAnonymized": {
          "type": "boolean",
          "description": "Indicates whether the case study has been anonymized to protect patient privacy."
        }
      },
      "required": [
        "id",
        "doctorId",
        "title",
        "description",
        "category",
        "createdAt",
        "isAnonymized"
      ]
    },
    "Notification": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Notification",
      "type": "object",
      "description": "Represents a notification sent to a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the notification.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Notification)"
        },
        "message": {
          "type": "string",
          "description": "The content of the notification."
        },
        "status": {
          "type": "string",
          "description": "The status of the notification (SENT, PENDING, FAILED)."
        },
        "sentAt": {
          "type": "string",
          "description": "The timestamp when the notification was sent.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "message",
        "status",
        "sentAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profiles. The 'userId' parameter is the Firebase Authentication UID.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching the Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/patients/{patientId}",
        "definition": {
          "entityName": "Patient",
          "schema": {
            "$ref": "#/backend/entities/Patient"
          },
          "description": "Stores patient-specific data, linked to a user profile. The 'userId' parameter ensures that only the owning user can access their patient data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (owner of the patient record)."
            },
            {
              "name": "patientId",
              "description": "The unique identifier for the patient record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/doctors/{doctorId}",
        "definition": {
          "entityName": "Doctor",
          "schema": {
            "$ref": "#/backend/entities/Doctor"
          },
          "description": "Stores doctor-specific data, linked to a user profile. The 'userId' parameter ensures that only the owning user can access their doctor data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (owner of the doctor record)."
            },
            {
              "name": "doctorId",
              "description": "The unique identifier for the doctor record."
            }
          ]
        }
      },
      {
        "path": "/queues/{queueId}",
        "definition": {
          "entityName": "Queue",
          "schema": {
            "$ref": "#/backend/entities/Queue"
          },
          "description": "Stores queue entries. Access can be controlled based on the roles of the users involved (e.g., the assigned doctor or an admin).",
          "params": [
            {
              "name": "queueId",
              "description": "The unique identifier for the queue entry."
            }
          ]
        }
      },
      {
        "path": "/case_studies/{caseStudyId}",
        "definition": {
          "entityName": "CaseStudy",
          "schema": {
            "$ref": "#/backend/entities/CaseStudy"
          },
          "description": "Stores case studies. Includes denormalized 'doctorId' for rules to verify ownership.",
          "params": [
            {
              "name": "caseStudyId",
              "description": "The unique identifier for the case study."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/notifications/{notificationId}",
        "definition": {
          "entityName": "Notification",
          "schema": {
            "$ref": "#/backend/entities/Notification"
          },
          "description": "Stores notifications for users. The 'userId' ensures notifications are scoped to a specific user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user receiving the notification."
            },
            {
              "name": "notificationId",
              "description": "The unique identifier for the notification."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure has been updated to introduce a `UserProfile` entity. This separates core user information (like name, email, role) from role-specific data (like a patient's age or a doctor's specialization). This is a more scalable and normalized approach. The `Patient` and `Doctor` entities are now sub-collections under the main `/users/{userId}` document, ensuring a clear ownership model. This structure simplifies security rules, as access to a user's own patient or doctor data is inherently controlled by the `userId` in the document path."
  }
}